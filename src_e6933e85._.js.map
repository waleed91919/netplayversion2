{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://E%3A/netplay-server/netplay/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-xl border bg-card text-card-foreground shadow\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"font-semibold leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,yDACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,6CAA6C;QAC1D,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file://E%3A/netplay-server/netplay/src/lib/tmdb-api.ts"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = process.env.NEXT_PUBLIC_TMDB_API_KEY || '';\nconst BASE_URL = process.env.NEXT_PUBLIC_TMDB_API_URL || 'https://api.themoviedb.org/3';\nconst IMAGE_BASE_URL = process.env.NEXT_PUBLIC_TMDB_IMAGE_URL || 'https://image.tmdb.org/t/p';\n\nexport const IMAGE_SIZES = {\n  poster: {\n    small: 'w185',\n    medium: 'w342',\n    large: 'w500',\n    original: 'original'\n  },\n  backdrop: {\n    small: 'w300',\n    medium: 'w780',\n    large: 'w1280',\n    original: 'original'\n  },\n  profile: {\n    small: 'w45',\n    medium: 'w185',\n    large: 'h632',\n    original: 'original'\n  }\n};\n\nexport const getImageUrl = (path: string | null, size: string): string => {\n  if (!path) {\n    // Return a placeholder image from placeholder.com\n    if (size.includes('original')) {\n      return 'https://via.placeholder.com/1280x720?text=No+Image';\n    } else if (size.includes('w500')) {\n      return 'https://via.placeholder.com/500x750?text=No+Image';\n    } else if (size.includes('w342')) {\n      return 'https://via.placeholder.com/342x513?text=No+Image';\n    } else if (size.includes('w185')) {\n      return 'https://via.placeholder.com/185x278?text=No+Image';\n    }\n    return 'https://via.placeholder.com/300x450?text=No+Image';\n  }\n\n  // Check if path is already a full URL\n  if (path.startsWith('http')) {\n    return path;\n  }\n\n  return `${IMAGE_BASE_URL}/${size}${path}`;\n};\n\nconst tmdbApi = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n    language: 'de-DE',\n  },\n});\n\n// Types\nexport interface Movie {\n  id: number;\n  title: string;\n  overview: string;\n  poster_path: string | null;\n  backdrop_path: string | null;\n  release_date: string;\n  vote_average: number;\n  genre_ids: number[];\n  original_language: string;\n  runtime?: number;\n}\n\nexport interface Series {\n  id: number;\n  name: string;\n  overview: string;\n  poster_path: string | null;\n  backdrop_path: string | null;\n  first_air_date: string;\n  vote_average: number;\n  genre_ids: number[];\n  original_language: string;\n  episode_run_time?: number[];\n}\n\nexport interface Genre {\n  id: number;\n  name: string;\n}\n\nexport interface MediaResponse<T> {\n  page: number;\n  results: T[];\n  total_pages: number;\n  total_results: number;\n}\n\nexport interface ContentDetails extends Movie, Series {\n  genres: Genre[];\n  homepage?: string;\n  status?: string;\n  tagline?: string;\n  created_by?: any[];\n  number_of_seasons?: number;\n  number_of_episodes?: number;\n}\n\n// API Endpoints\nexport const apiEndpoints = {\n  // Movies\n  getTrendingMovies: () => tmdbApi.get<MediaResponse<Movie>>('/trending/movie/week'),\n  getPopularMovies: (page = 1) =>\n    tmdbApi.get<MediaResponse<Movie>>('/movie/popular', { params: { page } }),\n  getMovieById: (id: number) =>\n    tmdbApi.get<ContentDetails>(`/movie/${id}`),\n  getMoviesByGenre: (genreId: number, page = 1) =>\n    tmdbApi.get<MediaResponse<Movie>>('/discover/movie', {\n      params: { with_genres: genreId, page }\n    }),\n\n  // TV Series\n  getTrendingTVSeries: () => tmdbApi.get<MediaResponse<Series>>('/trending/tv/week'),\n  getPopularTVSeries: (page = 1) =>\n    tmdbApi.get<MediaResponse<Series>>('/tv/popular', { params: { page } }),\n  getTVSeriesById: (id: number) =>\n    tmdbApi.get<ContentDetails>(`/tv/${id}`),\n  getTVSeriesByGenre: (genreId: number, page = 1) =>\n    tmdbApi.get<MediaResponse<Series>>('/discover/tv', {\n      params: { with_genres: genreId, page }\n    }),\n\n  // Genres\n  getMovieGenres: () => tmdbApi.get<{genres: Genre[]}>('/genre/movie/list'),\n  getTVGenres: () => tmdbApi.get<{genres: Genre[]}>('/genre/tv/list'),\n\n  // Search\n  searchMulti: (query: string, page = 1) =>\n    tmdbApi.get<MediaResponse<Movie | Series>>('/search/multi', {\n      params: { query, page, include_adult: false }\n    }),\n  searchMovies: (query: string, page = 1) =>\n    tmdbApi.get<MediaResponse<Movie>>('/search/movie', {\n      params: { query, page, include_adult: false }\n    }),\n  searchTVSeries: (query: string, page = 1) =>\n    tmdbApi.get<MediaResponse<Series>>('/search/tv', {\n      params: { query, page, include_adult: false }\n    }),\n};\n\nexport default tmdbApi;\n"],"names":[],"mappings":";;;;;;AAEgB;AAFhB;;AAEA,MAAM,UAAU,wEAAwC;AACxD,MAAM,WAAW,oEAAwC;AACzD,MAAM,iBAAiB,kEAA0C;AAE1D,MAAM,cAAc;IACzB,QAAQ;QACN,OAAO;QACP,QAAQ;QACR,OAAO;QACP,UAAU;IACZ;IACA,UAAU;QACR,OAAO;QACP,QAAQ;QACR,OAAO;QACP,UAAU;IACZ;IACA,SAAS;QACP,OAAO;QACP,QAAQ;QACR,OAAO;QACP,UAAU;IACZ;AACF;AAEO,MAAM,cAAc,CAAC,MAAqB;IAC/C,IAAI,CAAC,MAAM;QACT,kDAAkD;QAClD,IAAI,KAAK,QAAQ,CAAC,aAAa;YAC7B,OAAO;QACT,OAAO,IAAI,KAAK,QAAQ,CAAC,SAAS;YAChC,OAAO;QACT,OAAO,IAAI,KAAK,QAAQ,CAAC,SAAS;YAChC,OAAO;QACT,OAAO,IAAI,KAAK,QAAQ,CAAC,SAAS;YAChC,OAAO;QACT;QACA,OAAO;IACT;IAEA,sCAAsC;IACtC,IAAI,KAAK,UAAU,CAAC,SAAS;QAC3B,OAAO;IACT;IAEA,OAAO,GAAG,eAAe,CAAC,EAAE,OAAO,MAAM;AAC3C;AAEA,MAAM,UAAU,wIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IAC3B,SAAS;IACT,QAAQ;QACN,SAAS;QACT,UAAU;IACZ;AACF;AAoDO,MAAM,eAAe;IAC1B,SAAS;IACT,mBAAmB,IAAM,QAAQ,GAAG,CAAuB;IAC3D,kBAAkB,CAAC,OAAO,CAAC,GACzB,QAAQ,GAAG,CAAuB,kBAAkB;YAAE,QAAQ;gBAAE;YAAK;QAAE;IACzE,cAAc,CAAC,KACb,QAAQ,GAAG,CAAiB,CAAC,OAAO,EAAE,IAAI;IAC5C,kBAAkB,CAAC,SAAiB,OAAO,CAAC,GAC1C,QAAQ,GAAG,CAAuB,mBAAmB;YACnD,QAAQ;gBAAE,aAAa;gBAAS;YAAK;QACvC;IAEF,YAAY;IACZ,qBAAqB,IAAM,QAAQ,GAAG,CAAwB;IAC9D,oBAAoB,CAAC,OAAO,CAAC,GAC3B,QAAQ,GAAG,CAAwB,eAAe;YAAE,QAAQ;gBAAE;YAAK;QAAE;IACvE,iBAAiB,CAAC,KAChB,QAAQ,GAAG,CAAiB,CAAC,IAAI,EAAE,IAAI;IACzC,oBAAoB,CAAC,SAAiB,OAAO,CAAC,GAC5C,QAAQ,GAAG,CAAwB,gBAAgB;YACjD,QAAQ;gBAAE,aAAa;gBAAS;YAAK;QACvC;IAEF,SAAS;IACT,gBAAgB,IAAM,QAAQ,GAAG,CAAoB;IACrD,aAAa,IAAM,QAAQ,GAAG,CAAoB;IAElD,SAAS;IACT,aAAa,CAAC,OAAe,OAAO,CAAC,GACnC,QAAQ,GAAG,CAAgC,iBAAiB;YAC1D,QAAQ;gBAAE;gBAAO;gBAAM,eAAe;YAAM;QAC9C;IACF,cAAc,CAAC,OAAe,OAAO,CAAC,GACpC,QAAQ,GAAG,CAAuB,iBAAiB;YACjD,QAAQ;gBAAE;gBAAO;gBAAM,eAAe;YAAM;QAC9C;IACF,gBAAgB,CAAC,OAAe,OAAO,CAAC,GACtC,QAAQ,GAAG,CAAwB,cAAc;YAC/C,QAAQ;gBAAE;gBAAO;gBAAM,eAAe;YAAM;QAC9C;AACJ;uCAEe","debugId":null}},
    {"offset": {"line": 234, "column": 0}, "map": {"version":3,"sources":["file://E%3A/netplay-server/netplay/src/components/ui/media-card.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport Image from 'next/image';\nimport Link from 'next/link';\nimport { Card } from '@/components/ui/card';\nimport { Movie, Series, getImageUrl, IMAGE_SIZES } from '@/lib/tmdb-api';\nimport { FaStar, FaPlay, FaPlus, FaMinus, FaTrash, FaInfoCircle } from 'react-icons/fa';\n\ninterface MediaCardProps {\n  item: Movie | Series;\n  type: 'movie' | 'tv' | 'history' | 'watchlist';\n  onAction?: (action: 'play' | 'add' | 'remove' | 'info', item: Movie | Series) => void;\n  featured?: boolean;\n  index?: number; // Add index for staggered animations\n}\n\nexport function MediaCard({ item, type, onAction, featured = false, index = 0 }: MediaCardProps) {\n  const [isHovered, setIsHovered] = useState(false);\n  const [isImageLoaded, setIsImageLoaded] = useState(false);\n  const [isInView, setIsInView] = useState(false);\n\n  // For animated entrance\n  useEffect(() => {\n    // Simple delay based on index for staggered animation\n    const timer = setTimeout(() => setIsInView(true), index * 100);\n    return () => clearTimeout(timer);\n  }, [index]);\n\n  const title = 'title' in item ? item.title : item.name;\n  const releaseDate = 'release_date' in item ? item.release_date : item.first_air_date;\n  const year = releaseDate ? new Date(releaseDate).getFullYear() : '';\n  const rating = item.vote_average.toFixed(1);\n  const posterPath = item.poster_path;\n  const id = item.id;\n\n  // Route based on item type\n  const detailPath = type === 'movie'\n    ? `/movie/${id}`\n    : type === 'tv'\n      ? `/series/${id}`\n      : 'title' in item ? `/movie/${id}` : `/series/${id}`;\n\n  const handleAction = (action: 'play' | 'add' | 'remove' | 'info') => {\n    if (onAction) {\n      onAction(action, item);\n    }\n  };\n\n  const imageUrl = getImageUrl(posterPath, IMAGE_SIZES.poster.medium);\n\n  return (\n    <div \n      className={`transform transition-all duration-500 ${isInView ? 'opacity-100 translate-y-0' : 'opacity-0 translate-y-12'}`}\n      style={{ transitionDelay: `${index * 50}ms` }}\n    >\n      <Card\n        className={`overflow-hidden border-none rounded-lg shadow-card hover:shadow-card-hover transition-all duration-300 ${\n          featured ? 'scale-105 shadow-lg' : ''\n        }`}\n      >\n        <div\n          className=\"relative card-hover-effect\"\n          onMouseEnter={() => setIsHovered(true)}\n          onMouseLeave={() => setIsHovered(false)}\n        >\n          {/* Featured badge */}\n          {featured && (\n            <div className=\"absolute top-2 left-2 z-20 bg-accent-color text-white px-2 py-1 text-xs rounded-full animate-pulse-custom\">\n              Featured\n            </div>\n          )}\n\n          {/* Main Content Link */}\n          <Link href={detailPath} className=\"block relative aspect-[2/3] w-full overflow-hidden\">\n            {/* Image with zoom effect */}\n            <div className=\"w-full h-full overflow-hidden\">\n              {imageUrl.startsWith('https') ? (\n                <img\n                  src={imageUrl}\n                  alt={title}\n                  className={`w-full h-full object-cover transition-transform duration-700 ${\n                    isHovered ? 'scale-110' : 'scale-100'\n                  } ${isImageLoaded ? 'opacity-100' : 'opacity-0'}`}\n                  onLoad={() => setIsImageLoaded(true)}\n                />\n              ) : (\n                <div className=\"relative w-full h-full\">\n                  <Image\n                    src={imageUrl}\n                    alt={title}\n                    fill\n                    className={`object-cover transition-transform duration-700 ${\n                      isHovered ? 'scale-110' : 'scale-100'\n                    } ${isImageLoaded ? 'opacity-100' : 'opacity-0'}`}\n                    onLoad={() => setIsImageLoaded(true)}\n                  />\n                </div>\n              )}\n            </div>\n\n            {/* Placeholder while loading */}\n            {!isImageLoaded && (\n              <div className=\"absolute inset-0 flex items-center justify-center bg-card\">\n                <div className=\"skeleton-loading w-full h-full\"></div>\n              </div>\n            )}\n\n            {/* Overlay gradient always present at bottom */}\n            <div className=\"absolute inset-0 bg-gradient-to-t from-black via-black/40 to-transparent opacity-90\"></div>\n\n            {/* Hover action overlay */}\n            <div\n              className={`absolute inset-0 flex items-center justify-center gap-3 bg-black/50 transition-all duration-500 ${\n                isHovered ? 'opacity-100' : 'opacity-0'\n              }`}\n            >\n              <button\n                onClick={(e) => {\n                  e.preventDefault();\n                  e.stopPropagation();\n                  handleAction('play');\n                }}\n                className=\"bg-accent-color hover:bg-hover-color text-white w-12 h-12 rounded-full flex items-center justify-center transition-transform transform hover:scale-110 duration-300\"\n                aria-label=\"Play\"\n              >\n                <FaPlay className=\"text-sm\" />\n              </button>\n\n              {(type === 'movie' || type === 'tv') && (\n                <button\n                  onClick={(e) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    handleAction('add');\n                  }}\n                  className=\"bg-white/20 hover:bg-white/30 text-white w-10 h-10 rounded-full flex items-center justify-center transition-transform transform hover:scale-110 duration-300\"\n                  aria-label=\"Add to watchlist\"\n                >\n                  <FaPlus className=\"text-sm\" />\n                </button>\n              )}\n\n              {type === 'watchlist' && (\n                <button\n                  onClick={(e) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    handleAction('remove');\n                  }}\n                  className=\"bg-white/20 hover:bg-white/30 text-white w-10 h-10 rounded-full flex items-center justify-center transition-transform transform hover:scale-110 duration-300\"\n                  aria-label=\"Remove from watchlist\"\n                >\n                  <FaMinus className=\"text-sm\" />\n                </button>\n              )}\n\n              {type === 'history' && (\n                <button\n                  onClick={(e) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    handleAction('remove');\n                  }}\n                  className=\"bg-white/20 hover:bg-white/30 text-white w-10 h-10 rounded-full flex items-center justify-center transition-transform transform hover:scale-110 duration-300\"\n                  aria-label=\"Remove from history\"\n                >\n                  <FaTrash className=\"text-sm\" />\n                </button>\n              )}\n            </div>\n\n            {/* Info that appears on hover at the bottom */}\n            <div \n              className={`absolute bottom-0 left-0 right-0 p-3 transform transition-transform duration-500 ${\n                isHovered ? 'translate-y-0' : 'translate-y-full'\n              }`}\n            >\n              <h3 className=\"font-bold text-base text-white truncate\">{title}</h3>\n              <div className=\"flex justify-between items-center mt-1\">\n                <div className=\"flex items-center text-sm text-white\">\n                  <FaStar className=\"text-rating-color mr-1\" />\n                  <span>{rating}</span>\n                </div>\n                <div className=\"text-sm text-white/80\">\n                  {year}\n                </div>\n              </div>\n            </div>\n          </Link>\n\n          {/* Title - only visible when not hovered */}\n          <div \n            className={`p-3 transition-opacity duration-300 ${\n              isHovered ? 'opacity-0' : 'opacity-100'\n            }`}\n          >\n            <h3 className=\"font-medium text-sm truncate\" title={title}>\n              {title}\n            </h3>\n            <div className=\"flex justify-between items-center mt-1\">\n              <div className=\"flex items-center text-xs text-muted-foreground\">\n                <FaStar className=\"text-rating-color text-[10px] mr-1\" />\n                <span>{rating}</span>\n              </div>\n              <div className=\"text-xs text-muted-foreground\">\n                {year}\n              </div>\n            </div>\n          </div>\n        </div>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 605, "column": 0}, "map": {"version":3,"sources":["file://E%3A/netplay-server/netplay/src/app/series/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect, Suspense } from 'react';\nimport { MediaCard } from '@/components/ui/media-card';\nimport { SearchBar } from '@/components/ui/search-bar';\nimport { toast } from 'sonner';\nimport { Series, Genre } from '@/lib/tmdb-api';\n\nasync function getDataClientSide(): Promise<{ series: Series[]; genres: Genre[] }> {\n  try {\n    const [seriesRes, genresRes] = await Promise.all([\n      fetch('/api/series'),\n      fetch('/api/genres?type=tv')\n    ]);\n\n    if (!seriesRes.ok || !genresRes.ok) {\n      throw new Error('Failed to fetch data');\n    }\n\n    const series = await seriesRes.json();\n    const genres = await genresRes.json();\n    return { series, genres };\n\n  } catch (error) {\n    console.error(\"Error fetching data client-side:\", error);\n    toast.error('Fehler beim Laden der Serien.');\n    return { series: [], genres: [] };\n  }\n}\n\nexport default function SeriesPage() {\n  const [series, setSeries] = useState<Series[]>([]);\n  const [genres, setGenres] = useState<Genre[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [filteredSeries, setFilteredSeries] = useState<Series[]>([]);\n\n  useEffect(() => {\n    async function loadData() {\n      setLoading(true);\n      const { series: fetchedSeries, genres: fetchedGenres } = await getDataClientSide();\n      setSeries(fetchedSeries);\n      setGenres(fetchedGenres);\n      setFilteredSeries(fetchedSeries);\n      setLoading(false);\n    }\n    loadData();\n  }, []);\n\n  const currentYear = new Date().getFullYear();\n  const years = Array.from({ length: 20 }, (_, i) => (currentYear - i).toString());\n\n  const countries = [\n    { code: 'US', name: 'USA' },\n    { code: 'DE', name: 'Germany' },\n    { code: 'GB', name: 'UK' },\n    { code: 'FR', name: 'France' },\n    { code: 'JP', name: 'Japan' },\n    { code: 'KR', name: 'Korea' },\n    { code: 'IT', name: 'Italy' },\n    { code: 'ES', name: 'Spain' },\n  ];\n\n  const handleSearch = (filters: any) => {\n    console.log('Search filters:', filters);\n    toast.info('Filter werden angewendet...');\n    let results = series;\n    if (filters.query) {\n        const queryLower = filters.query.toLowerCase();\n        results = results.filter(s => s.name.toLowerCase().includes(queryLower));\n    }\n    setFilteredSeries(results);\n  };\n\n  const handleMediaAction = (action: string, item: Series) => {\n    const title = item.name;\n    if (action === 'play') {\n      toast.info(`Playing ${title}...`);\n    } else if (action === 'add') {\n      toast.success(`${title} zur Watchlist hinzugefügt!`);\n    }\n  };\n\n  return (\n    <main className=\"container mx-auto px-4 py-8 pt-24\">\n      <div className=\"page-header mb-8\">\n        <h1 className=\"text-3xl font-bold mb-6\">Serien</h1>\n        <SearchBar\n          genres={genres}\n          years={years}\n          countries={countries}\n          onSearch={handleSearch}\n          expanded={true}\n        />\n      </div>\n\n      {loading ? (\n        <p className=\"text-center\">Lade Serien...</p>\n      ) : (\n         <>\n          {filteredSeries.length > 0 ? (\n              <div className=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 xl:grid-cols-6 gap-4\">\n                  {filteredSeries.map((show) => (\n                    <MediaCard\n                      key={show.id}\n                      item={show}\n                      type=\"tv\"\n                      onAction={handleMediaAction}\n                    />\n                  ))}\n              </div>\n          ) : (\n              <p className=\"text-center text-muted-foreground\">Keine Serien gefunden, die den Kriterien entsprechen.</p>\n          )}\n         </>\n      )}\n    </main>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}